8일차(뷰 작성법 및 트랜잭션처리)


<문제1>
ALLEN과 같이 근무하는 사원의 사원명단을 출력하시오.
--------------------------

1)ALLEN과 같이 근무하는 사원->같은 부서번호를 구하시오.

spool c:\webtest\2.db\print\20171127.txt

sql>select deptno from emp
    where ename='ALLEN';

    DEPTNO
----------
        30

2)select ename from emp
  where deptno=30;

3) 1)+2)

select ename from emp
  where deptno=(select deptno from emp
                where ename='ALLEN');


ENAME
----------
ALLEN
WARD
MARTIN
BLAKE
TURNER
JAMES

6 개의 행이 선택되었습니다.


<실행결과>

ENAME ====>emp
----------
ALLEN
WARD
MARTIN
BLAKE
TURNER
JAMES


===========================================
<문제2> 'SCOTT' 이나 'MARTIN'과 동일한 급여를 받는 사원의
                또는(or)
        사번,이름, 급여를 조회하는 SQL구문을 작성하시오.

1)'SCOTT' 이나 'MARTIN'과 동일한 급여?

  select sal from emp
  where ename=upper('&ename');

SQL>  select sal from emp
  2    where ename=upper('&ename');
ename의 값을 입력하십시오: scott
구   2:   where ename=upper('&ename')
신   2:   where ename=upper('scott')

       SAL
----------
      3000

SQL> /
ename의 값을 입력하십시오: martin
구   2:   where ename=upper('&ename')
신   2:   where ename=upper('martin')

       SAL
----------
      1250

2)
 select empno,ename,sal from emp
 where sal=3000 or sal=1250;

3)->1)+2)

 select empno,ename,sal from emp
 where sal=(select sal from emp
            where ename=upper('scott')) or 
       sal=(select sal from emp
            where ename=upper('martin'));

     EMPNO ENAME             SAL
---------- ---------- ----------
      7521 WARD             1250
      7654 MARTIN           1250
      7788 SCOTT            3000
      7902 FORD             3000
-------------------------------------------------------------------
*****
<문제3>emp테이블에서 급여가 30번부서의 최고급여보다 많은 사원의 사번,
       이름,급여를 조회하시오.
*****

1)급여가 30번부서의 최고급여?

select max(sal) from emp
where deptno=30;

  MAX(SAL)
----------
      2850

2)select empno,ename,sal,deptno
  from emp
  where deptno!=30
  and sal > 2850;      //30번부서를 배제하지 않으면 where sal > 2850


3) 1)+2)

 다중행->any(X)->in,any,all
**********************************************************************
~ > (max(sal)~)=> > all(sal)=>최대값보다 큰값을 구해서 오름차순으로 정렬
                  < all(sal)=>최대값보다 작은값을 구해서 내림차순
**********************************************************************

~ > (min(sal)~)=> > any (sal)=>최소값

select empno,ename,sal,deptno
  from emp
  where deptno!=30
  and sal > (select max(sal) from emp
             where deptno=30);



     EMPNO ENAME             SAL     DEPTNO
---------- ---------- ---------- ----------
      7566 JONES            2975         20
      7788 SCOTT            3000         20
      7839 KING             5000         10
      7902 FORD             3000         20

  1  select empno,ename,sal,deptno
  2    from emp
  3    where deptno!=30
  4    and sal > all(select sal from emp
  5*              where deptno=30)
SQL> /

     EMPNO ENAME             SAL     DEPTNO
---------- ---------- ---------- ----------
      7566 JONES            2975         20
      7788 SCOTT            3000         20
      7902 FORD             3000         20
      7839 KING             5000         10
--------------------------------------------------
**뷰의 특징**

1.뷰는 테이블에 대한 제한을 가지고 테이블의 일정한 부분만 
보일 수 있는 가상의 테이블이다.=>보안

2.뷰는 실제 자료를 갖지는 않지만, 뷰를 통해 테이블을 관리할 수 있다.
  (저장공간이 따로 없다)                ex)insert,update,delete가 가능

3.하나의 테이블에 뷰의 개수는 제한이 없다.

<문제4>뷰를 사용할때 주의할점=>뷰가 실행이 안되는 경우
=>뷰를 통해서 만들어진 테이블의 구조(Schema)에 문제가 발생하는 경우
=>특정필드가 문제발생,테이블이 삭제

A자로 시작하는 사원들만 따로 조회->emp_name

sql>create view v_emp_name
    as select empno,ename
    from b_emp
    where ename like 'A%'; //save ->@c:\webtest\2.db\print\namesearch.txt


sql>select * from v_emp_name; //select * from 실행할 뷰명;

     EMPNO ENAME
---------- ---------
      7499 ALLEN
      7876 ADAMS

오라클에서 임의로 특정테이블의 필드를 사용못하게 설정
->쓸모없어진 백업테이블에다 사용한다(원본 테이블에는 사용금지)

<문제5>

형식)alter table 수정table명 set unused column 사용하지 못하게 할 필드명
sql>alter table b_emp set unused column ename;
   ->DDL문이기 때문에 복구 불가

sql>desc b_emp

 이름
 ------------------------
 -------------------->ename필드가 없기때문에 실제로 결과를 볼 수가 없다.
 EMPNO
 JOB
 MGR
 HIREDATE
 SAL
 COMM
 DEPTNO

sql>select * from v_emp_name;

select * from v_emp_name
              *
1행에 오류:
ORA-04063: view "SCOTT.V_EMP_NAME"에 오류가 있습니다 =>복구불가능

<문제6>더이상 불필요로하는 뷰는 삭제?=> drop view 삭제시킬뷰이름
==>DDL문=>기본적으로 복구가 안된다.

sql>drop view v_emp_name;
뷰가 삭제되었습니다.

<문제7> 뷰는 쿼리문을 저장하는 객체(텍스트)
=>뷰를 생성,수정,삭제==>전부 기록(시스템 테이블)=>데이터 딕셔너리
=>user_constrainsts, user_views

sql>desc user_views

 이름                                      널?      유형
 ----------------------------------------- -------- ---------------

 VIEW_NAME(생성한 뷰이름이 저장)                                 NOT NULL VARCHAR2(30)
 TEXT_LENGTH(뷰의 텍스트 문자열길이)                                        NUMBER
 TEXT (뷰의 내용->텍스트)                                               LONG
 TYPE_TEXT_LENGTH                                   NUMBER
 TYPE_TEXT                                          VARCHAR2(4000)
 OID_TEXT_LENGTH                                    NUMBER
 OID_TEXT                                           VARCHAR2(4000)
 VIEW_TYPE_OWNER                                    VARCHAR2(30)
 VIEW_TYPE                                          VARCHAR2(30)
 SUPERVIEW_NAME                                     VARCHAR2(30)
 EDITIONING_VIEW                                    VARCHAR2(1)
 READ_ONLY (읽기 전용)확인                                          VARCHAR2(1)

 select * from 실행시킬 뷰이름;====>user_views;=>
sql>select view_name,text_length,text from user_views;

VIEW_NAME                      TEXT_LENGTH
----------                     -----------
TEXT
----------------------------------------------

V_EMP20                                 63
select empno,ename,job,deptno from b_emp
       where deptno=20

<문제8> 오라클에서 필드의 폭을 줄이고 싶다.
형식) col[umn] 필드명 format a자릿수->ex) a15(15자이 저장할 길이를 조절)
                             99,999=>숫자의 경우9로 표시 ,구분

sql>col view_name format a15
sql>col text_length format 99,990 ->0이 표시되게 하기위해서
sql>col text format a40

SQL> /

VIEW_NAME       TEXT_LENGTH TEXT
--------------- ----------- ----------------------------------------
V_EMP20                  63 select empno,ename,job,deptno from b_emp

                                   where deptno=20
=>자주 검색,사용->저장(파일),뷰=>편리성 추가

ed

  1  create view v_search
  2  as
  3* select view_name,text_length,text from user_views
SQL> /

뷰가 생성되었습니다.

SQL> select * from v_search;//단점->scott계정만 사용이 가능
                            //모든 계정이 다사용->save 명령어를 사용(장기)

VIEW_NAME       TEXT_LENGTH TEXT
--------------- ----------- ----------------------------------------
V_EMP20                  63 select empno,ename,job,deptno from b_emp
                                   where deptno=20

V_SEARCH                 49 select view_name,text_length,text from u
                            ser_views


<문제9>만들어진 뷰를 나중에 다시 수정하고 싶은 경우=> 수정X
       =>지우고 다시 작성한다.

뷰를 작성할때 처음부터 수정까지 하는것을 고려한다면

형식) create [or replace] view(변경할필드1,필드명2,,,) 작성할 뷰이름 as sql구문
             ============>추가해주면 수정이 가능한 뷰를 만들 수 있다.

sql>create table b_emp2 as select * from emp;

b_emp2테이블에서 부서번호가 10번인 데이터를 찾아서 그 사원의 사번,이름
입사일만 출력할 뷰를 작성하세요(1.수정뷰)
(단 필드명 ->employee_no,employee_name,e_hiredate 변경할것)

sql>create or replace view v_emp10(employee_no,employee_name,e_hiredate)
    as select empno,ename,hiredate from b_emp2
    where deptno=10;

뷰가 생성되었습니다.

sql>select * from v_emp10;

EMPLOYEE_NO EMPLOYEE_N E_HIREDA
----------- ---------- --------
       7782 CLARK      81/06/09
       7839 KING       81/11/17
       7934 MILLER     82/01/23

sql>select * from v_search;

VIEW_NAME       TEXT_LENGTH TEXT
--------------- ----------- ------------------------------------
V_EMP20                  63 select empno,ename,job,deptno from b

                                   where deptno=20

V_SEARCH                 49 select view_name,text_length,text fr
                            ser_views

                            before
V_EMP10                  59 select empno,ename,hiredate from b_e
                                where deptno=10
                          =>10번부서를 조회가능한 뷰=>20번부서,D자가 들어간
                                                      사원정보를 출력
====================================================
뷰를 수정하는 방법? =>이미 만들어진 뷰를 다시 한번덮어쓰기

sql>create or replace view v_emp10(id,job2,hire)
    as select empno,job,hiredate from b_emp2
    where deptno=20 or ename like '%D%';

sql>select * from v_search;

SQL> select * from v_search;

VIEW_NAME       TEXT_LENGTH TEXT
--------------- ----------- ----------------------------------------
V_EMP20                  63 select empno,ename,job,deptno from b_emp

                                   where deptno=20

V_SEARCH                 49 select view_name,text_length,text from u
                            ser_views
                          
                         수정뷰의 내용을 수정한 경우(after)
V_EMP10                  77 select empno,job,hiredate from b_emp2
                                where deptno=20 or ename like '%D%'

sql>select * from v_emp10;

        ID JOB2      HIRE
---------- --------- --------
      7369 CLERK     80/12/17
      7521 SALESMAN  81/02/22
      7566 MANAGER   81/04/02
      7788 ANALYST   87/04/19
      7876 CLERK     87/05/23
      7902 ANALYST   81/12/03

6 개의 행이 선택되었습니다.


뷰는 실제 자료를 갖지는 않지만, 뷰를 통해 테이블을 관리할 수 있다.
=>테이블처럼 행으로 저장X =>텍스트로 저장(user_views)

<문제10>뷰를 통해서 테이블 관리가 가능하다(insert,update,delete).
        ->뷰와 연결된 테이블만 가능하다.(하나의 테이블로만 구성이 된경우)
                              ****************************************
       ->언제나 가능하다 (X)=>뷰의 종류(1.simple view만 가능(테이블)
                                          DML 가능,그룹함수,distinct가 사용
                                          이 된 경우에는 불가
                                          ============================= 
                                        2.complex view)->주로 검색용
                                         ->두개의 테이블을 통해서 뷰를 작성
                                            한경우 (불가능)->조인
                                           DML은 안되지만 그룹함수,distinct
                                           사용이 가능하다.
                              *******************************************

b_emp2->DML을 작성 ->부서번호(deptno)가 30인 사원의 이름,급여,부서번호만 보여주는
뷰를 작성 (뷰이름:view_30)

sql>create view view_30 as
select ename,sal,deptno
from b_emp2
where deptno=30;

sql>select * from view_30; //b_emp2의 조회=>수정->update 테이블명~


ENAME             SAL     DEPTNO
---------- ---------- ----------
ALLEN            1600         30 =>//ALLEN->1개월 감봉(1600 -> 0)
                            
WARD             1250         30
MARTIN           1250         30
BLAKE            2850         30
TURNER           1500         30
JAMES             950         30

6 개의 행이 선택되었습니다.

형식) update 수정t명 set 수정할 필드명=수정할값,,,
             =======>뷰이름을 사용한다.
      where 조건식

sql>update view_30 set sal=0
    where ename='ALLEN';  //b_emp2에 수정

1 행이 갱신되었습니다.

sql>select * from view_30;

ENAME             SAL     DEPTNO
---------- ---------- ----------
ALLEN               0         30
WARD             1250         30
MARTIN           1250         30
BLAKE            2850         30
TURNER           1500         30
JAMES             950         30

6 개의 행이 선택되었습니다.

SQL> rollback; //0->1600으로 되돌린 경우

롤백이 완료되었습니다.

SQL> select * from view_30;

ENAME             SAL     DEPTNO
---------- ---------- ----------
ALLEN            1600         30
WARD             1250         30
MARTIN           1250         30
BLAKE            2850         30
TURNER           1500         30
JAMES             950         30

6 개의 행이 선택되었습니다.

<문제11>단순뷰(simple view)에서도 그룹함수 사용불가능
부서별로 최대급여를 조회할 수있는 뷰를 작성하시오.(v_maxsal)
(group by deptno)  (부서번호,최대급여순으로 출력)
(뷰의 내용도 수정이 가능하게 설정할것.=>or replace)

sql>create or replace view v_maxsal
    as select deptno,max(sal)
    from emp
    group by deptno;

SQL> create or replace view v_maxsal
  2      as select deptno,max(sal)=>그룹함수=> 필드명X
  3      from emp
  4      group by deptno;
    as select deptno,max(sal)
                     *
2행에 오류:
ORA-00998: 이 식은 열의 별명과 함께 지정해야 합니다

=>뷰를 작성할때 실행시킬 SQL구문의 일반필드는 상관이 없지만 가상필드(=계산필드)
는 원래 존재하지 않기때문에 에러가 발생->필드에 대한 별칭을 부여하면 에러유발X
============================================================================
ed

  1  create or replace view v_maxsal
  2      as select deptno,max(sal) as "최대 급여"
  3      from emp                  ==============
  4*     group by deptno
SQL> /

뷰가 생성되었습니다.

SQL> select * from v_maxsal;

------------------------------>뷰에서 그룹함수를 사용이 가능하지만
                               별칭을 부여해야 한다.(단순뷰에서만)

    DEPTNO  최대 급여
---------- ----------
        30       2850
        20       3000
        10       5000

---------------------------------------------
<문제12> 복합뷰(complex view)->한개이상의 테이블을 조합해서 만들어진 뷰
                               (조인,서브쿼리)->DML X (편리성 추구)

사원이름,부서명을 출력시켜주는 뷰를 작성하라(v_dname)
 ename(emp) dname(dept)
   e               d
sql>create or replace view v_dname
   as select e.ename,d.dname
   from emp e,dept d
   where e.deptno=d.deptno;

sql>select * from v_dname;

ENAME      DNAME
---------- --------------
SMITH      RESEARCH
ALLEN      SALES
WARD       SALES
JONES      RESEARCH
MARTIN     SALES
BLAKE      SALES
CLARK      ACCOUNTING
SCOTT      RESEARCH
KING       ACCOUNTING
TURNER     SALES
ADAMS      RESEARCH

ENAME      DNAME
---------- --------------
JAMES      SALES
FORD       RESEARCH
MILLER     ACCOUNTING

14 개의 행이 선택되었습니다.

<문제13>복합뷰(서브쿼리)
SMITH 보다 많은 급여를 받는 사원을 찾아서 그 사원의 이름,급여,부서번호를
조회할수 있는 뷰를 작성(뷰이름:v_smith, 경우에 따라서는 뷰의 내용도 수정이
                       가능하게 설정할것)

1)SMITH 보다 많은 급여?

 select sal from emp where ename='SMITH';
 
       SAL
----------
       800

2) 
   create or replace view v_smith
   as
   select ename,sal,deptno from emp
   where sal > (select sal from emp where ename='SMITH');

sql>select * from v_smith;

ENAME             SAL     DEPTNO
---------- ---------- ----------
ALLEN            1600         30
WARD             1250         30
JONES            2975         20
MARTIN           1250         30
BLAKE            2850         30
CLARK            2450         10
SCOTT            3000         20
KING             5000         10
TURNER           1500         30
ADAMS            1100         20
JAMES             950         30

ENAME             SAL     DEPTNO
---------- ---------- ----------
FORD             3000         20
MILLER           1300         10

13 개의 행이 선택되었습니다.

**단순뷰->DML이 가능한데 예외조항**

1.delete가 안되는 경우->그룹함수,group by,distinct를 사용하는 경우
2.insert,update가 안되는 경우
->그룹함수,group by,distinct를 사용하는 경우
->별칭부여->가상필드(=계산필드)부여->select =>rownum을 사용?

**************************************************************************
정리->존재하지 않은 가상필드를 사용하는 뷰를 작성한 경우에는 
      insert,update,delete가 실행이 안된다.

     ->insert,update,delete를 하기위해서는 그룹함수,group by,distinct를 사용X
============================================================================
 뷰와 제약조건에 대해서 =>트랜잭션

<문제14> [with check option] 옵션->뷰에 제약조건을 부여하고 싶을때 사용
제약조건을 이용->정해진 규칙에 따라서 insert,update,delete를 하기위해서

 데이터를 입력하는데 id값이 100이하인 경우에만 입력을 허용해주는 뷰를작성
 =========================================
 (v_test1)
 
sql>create table test1(id number);  //id>=1 and id <100 범위내에 있다면 입력허락

sql>create view v_test1
   as select * from test1
   where id < 100
   with check option constraints test1_ck;

형식) create view 뷰명 as sql구문 [with check option] constraints 제약조건명;

SQL> create view v_test1
  2     as select * from test1
  3     where id < 100
  4     with check option constraints test1

뷰가 생성되었습니다.


sql>insert into v_test1 values(1);
    insert into v_test1 values(2);
    insert into v_test1 values(3);
    insert into v_test1 values(4);
    insert into v_test1 values(5);
                =======테이블명 대신에 뷰이름을 사용

SQL> select * from v_test1;
                   =========뷰이름
        ID
----------
         1
         2
         3
         4
         5

SQL> insert into v_test1 values(102);

SQL> insert into v_test1 values(102);
insert into v_test1 values(102)
            *
1행에 오류:
ORA-01402: 뷰의 WITH CHECK OPTION의 조건에 위배 됩니다

=>id < 100 이라는 조건에 위배가 되는 sql구문을 실행했기때문에 에러유발
-----------------------------------------------------------------------
<문15>뷰를 작성할때 [with read only]를 부여하는 경우(읽기전용 뷰)
->수정X,삭제X 금지시키는 옵션

->읽기전용 파일->파일 삭제X,수정X
->(부서번호 30번이 부서이름을 출력시켜주는 뷰를 작성->v_dept30

sql>create or replace view v_dept30
    as select deptno,dname from dept
    where deptno=30
    with read only;//읽기전용뷰

뷰가 생성되었습니다.

SQL> select * from v_dept30;

    DEPTNO DNAME
---------- --------------
        30 SALES

sql>형식) delete from 뷰이름명;//테이블명
sql>delete from v_dept30;

delete from v_dept30
            *
1행에 오류:
ORA-42399: 읽기 전용 뷰에서는 DML 작업을 수행할 수 없습니다.
------------------------------------------------------------
*****오라클의 페이징 처리 기법*****
------------------------------------
인라인 뷰로 TOP-N 구하기(랭킹을 설정)

테이블에 데이터가 많은 상태->화면구현(테이블에 출력)
->페이지당 10(default)~20개 정도 출력

***********
1.rownum =>내부적으로 각각의 행(=레코드)을 구분해서 번호를 매기면서 출력시켜주는
           오라클의 예약어(내부적인 구분자)
***********
sql>select empno,ename from emp  //테이블에 저장된 순서대로 출력

     EMPNO ENAME
---------- ----------
1      7369 SMITH
2      7499 ALLEN
3      7521 WARD
4      7566 JONES
      7654 MARTIN
      7698 BLAKE
      7782 CLARK
      7788 SCOTT
      7839 KING
      7844 TURNER
      7876 ADAMS

     EMPNO ENAME
---------- ----------
      7900 JAMES
      7902 FORD
      7934 MILLER

14 개의 행이 선택되었습니다.


ed

  1* select rownum,empno,ename from emp
  2  ;

    ROWNUM      EMPNO ENAME
---------- ---------- ----------
         1       7369 SMITH
         2       7499 ALLEN
         3       7521 WARD
         4       7566 JONES
         5       7654 MARTIN
         6       7698 BLAKE
         7       7782 CLARK
         8       7788 SCOTT
         9       7839 KING
        10       7844 TURNER
        11       7876 ADAMS

    ROWNUM      EMPNO ENAME
---------- ---------- ----------
        12       7900 JAMES
        13       7902 FORD
        14       7934 MILLER

14 개의 행이 선택되었습니다.

SQL> ed

  1* select rownum empno,ename from emp
  2  ;

     EMPNO ENAME
---------- ----------
         1 SMITH
         2 ALLEN
         3 WARD
         4 JONES
         5 MARTIN
         6 BLAKE
         7 CLARK
         8 SCOTT
         9 KING
        10 TURNER
        11 ADAMS

     EMPNO ENAME
---------- ----------
        12 JAMES
        13 FORD
        14 MILLER

14 개의 행이 선택되었습니다.

SQL>

*********************************************************************
<문제16>emp테이블에서 가장 최근에 입사한 5명의 사원의 이름과 입사일을
                     ---------------------------------------
                     order by 필드명 desc
출력하시오.=>내부적으로 순위를 매기면서 출력(Top-N(임의의 수))기법


공식) select rownum "별칭명",필드명1,필드명2,,필드명n
       from (
         select 필드명,,,
         from 테이블명
         order by top-N 필드명(정렬하고자하는 필드명) desc
       ) 테이블의 별치명
       where 조건식(rownum <=top-N) ==>인라인 뷰


sql>select rownum "num",ename,hiredate
    from (
         select ename,hiredate
         from emp
         order by hiredate desc
    )
    where rownum<=&num

=>가장 최근에 입사한 데이터중에서 랭킹 5위안에 든 사원들의 정보를 찾아서
  앞에 번호를 매기면서 이름,입사일순으로 출력하라.

SQL> select rownum "num",ename,hiredate
  2      from (
  3           select ename,hiredate
  4           from emp
  5           order by hiredate desc
  6      )
  7      where rownum<=&num;//5
num의 값을 입력하십시오: 5
구   7:     where rownum<=&num
신   7:     where rownum<=5

       num ENAME      HIREDATE
---------- ---------- --------
         1 ADAMS      87/05/23
         2 SCOTT      87/04/19
         3 MILLER     82/01/23
         4 JAMES      81/12/03
         5 FORD       81/12/03

SQL> /
num의 값을 입력하십시오: 3
구   7:     where rownum<=&num
신   7:     where rownum<=3

       num ENAME      HIREDATE
---------- ---------- --------
         1 ADAMS      87/05/23
         2 SCOTT      87/04/19
         3 MILLER     82/01/23

SQL>

**********************************************************************
<문제17>트랜잭션(transaction)

=>데이터베이스에서 데이터를 관리할때(insert,update,delete)할때
여러개의 SQL명령어를 사용하게 되는데 이를 하나의 작업단위로 설정
 (DML(insert,update,delete))
================================================================

  |---------------------| |---------|  |----------|
    트랜잭션1              트랜잭션2      트랜잭션3
                  commit or rollcack

 조건-> All(실행) or Nothing(실행X)=>원자성
        commit(커밋)         (취소 rollback)

ex) 계좌이체(A(신한)------------>B(국민))
             -1000--------------->+1000

            1)신한 -1000
            2)구민->+1000
-----------------------------------------------------------
**COMMIT***

모든 작업들(insert,update,delete)을 정상적으로 처리
데이터베이스에 모두 반영-->테이블에 저장
변경된 내용을 모두 영구 저장->테이블에 저장
                   (변경하기전 까지는 그 상태를 계속 유지하는것)

주의사항 

commit을 직접 입력하지 않아도 commit을 한것으로 간주되는 명령어
(-->자동 commit 명령어)

DDL->create table,create view,alter drop table,drop view~
     =======                  =====       =====
--->자동으로 commit되기때문에 복구 불가능
--->exit->정상종료===>오라클은 지금까지 작업한 내용 모두를
    commit을 하고나서 테이블에 반영(저장)->
=========================================================
자동 commit->1)DDL,DCL문을 사용하는 경우 2)정상 종료

----------------------------------------------------------
ROLLBACK

처리 과정에서 발생한 변경 사항을 취소(undo 기능)
이전의 상태로 되돌린다. ->실행 취소

주의할점)

**정전,crash=>자동으로 rollback이 된다.**
------------------------------------------------------------------
                            집 컴퓨터
             <--------------(scott/tiger)
 회사 컴퓨터
   오라클    <--------------부서 컴퓨터
                             (scott/tiger)
 

창1

sql> create table b_dept2
     as select * from dept; //DDL

sql> select * from b_dept2;

SQL> create table b_dept2
  2       as select * from dept;

테이블이 생성되었습니다.

SQL> select * from b_dept2;

    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO
        40 OPERATIONS     BOSTON

 sql>insert into b_dept2 values(50,'SUPPORT','KWANGJU');

1 개의 행이 만들어졌습니다.

SQL> select * from b_dept2;

    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO
        40 OPERATIONS     BOSTON
        50 SUPPORT        KWANGJU

 comit;//메모리상에 저장된 값->테이블에 반영
         (저장)

SQL> commit; 

커밋이 완료되었습니다.

SQL> rollback; //commit을 사용하기전까지는 복구 가능

롤백이 완료되었습니다.

SQL> select * from b_dept2;

    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO
        40 OPERATIONS     BOSTON
        50 SUPPORT        KWANGJU

SQL>
-----------------------------------
트랜잭션 마무리,시컨스,동의어,
====================================






























